// Code generated by protoc-gen-go. DO NOT EDIT.
// source: protos/recom.proto

package recommender

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Request struct {
	Index                string   `protobuf:"bytes,1,opt,name=index,proto3" json:"index,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Request) Reset()         { *m = Request{} }
func (m *Request) String() string { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()    {}
func (*Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_485ef8a31f14cdfe, []int{0}
}

func (m *Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Request.Unmarshal(m, b)
}
func (m *Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Request.Marshal(b, m, deterministic)
}
func (m *Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Request.Merge(m, src)
}
func (m *Request) XXX_Size() int {
	return xxx_messageInfo_Request.Size(m)
}
func (m *Request) XXX_DiscardUnknown() {
	xxx_messageInfo_Request.DiscardUnknown(m)
}

var xxx_messageInfo_Request proto.InternalMessageInfo

func (m *Request) GetIndex() string {
	if m != nil {
		return m.Index
	}
	return ""
}

type Reply struct {
	Result               []float32 `protobuf:"fixed32,1,rep,packed,name=result,proto3" json:"result,omitempty"`
	Columns              []string  `protobuf:"bytes,2,rep,name=columns,proto3" json:"columns,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Reply) Reset()         { *m = Reply{} }
func (m *Reply) String() string { return proto.CompactTextString(m) }
func (*Reply) ProtoMessage()    {}
func (*Reply) Descriptor() ([]byte, []int) {
	return fileDescriptor_485ef8a31f14cdfe, []int{1}
}

func (m *Reply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Reply.Unmarshal(m, b)
}
func (m *Reply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Reply.Marshal(b, m, deterministic)
}
func (m *Reply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Reply.Merge(m, src)
}
func (m *Reply) XXX_Size() int {
	return xxx_messageInfo_Reply.Size(m)
}
func (m *Reply) XXX_DiscardUnknown() {
	xxx_messageInfo_Reply.DiscardUnknown(m)
}

var xxx_messageInfo_Reply proto.InternalMessageInfo

func (m *Reply) GetResult() []float32 {
	if m != nil {
		return m.Result
	}
	return nil
}

func (m *Reply) GetColumns() []string {
	if m != nil {
		return m.Columns
	}
	return nil
}

func init() {
	proto.RegisterType((*Request)(nil), "recommender.Request")
	proto.RegisterType((*Reply)(nil), "recommender.Reply")
}

func init() { proto.RegisterFile("protos/recom.proto", fileDescriptor_485ef8a31f14cdfe) }

var fileDescriptor_485ef8a31f14cdfe = []byte{
	// 164 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0xce, 0x3f, 0x0b, 0x82, 0x40,
	0x18, 0xc7, 0x71, 0x54, 0x54, 0x7c, 0xdc, 0x1e, 0x24, 0x8e, 0x96, 0xc4, 0xc9, 0xc9, 0xc0, 0xa6,
	0xc6, 0xc6, 0xd6, 0xe7, 0x25, 0xa4, 0xcf, 0x10, 0xdc, 0x79, 0xd7, 0xfd, 0x81, 0x7c, 0xf7, 0xc1,
	0x65, 0x14, 0x8d, 0x9f, 0xdf, 0xf2, 0xfb, 0x02, 0x1a, 0xab, 0xbd, 0x76, 0x47, 0xcb, 0x93, 0x56,
	0x43, 0x04, 0xd6, 0x11, 0x8a, 0x97, 0x99, 0x6d, 0x77, 0x80, 0x92, 0xf8, 0x11, 0xd8, 0x79, 0x6c,
	0x20, 0xbf, 0x2f, 0x33, 0x3f, 0x45, 0xd2, 0x26, 0x7d, 0x45, 0x6f, 0x74, 0x67, 0xc8, 0x89, 0x8d,
	0x5c, 0x71, 0x07, 0x85, 0x65, 0x17, 0xa4, 0x17, 0x49, 0x9b, 0xf5, 0x29, 0x6d, 0x42, 0x01, 0xe5,
	0xa4, 0x65, 0x50, 0x8b, 0x13, 0x69, 0x9b, 0xf5, 0x15, 0x7d, 0x38, 0x5e, 0xa0, 0xa6, 0xef, 0x15,
	0x8e, 0x50, 0x5c, 0x95, 0x09, 0x9e, 0xb1, 0x19, 0x7e, 0x12, 0x86, 0xed, 0x7f, 0x8f, 0x7f, 0xab,
	0x91, 0xeb, 0xad, 0x88, 0xc9, 0xa7, 0x57, 0x00, 0x00, 0x00, 0xff, 0xff, 0xf0, 0x69, 0xad, 0x3a,
	0xc8, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// RecommenderClient is the client API for Recommender service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RecommenderClient interface {
	Impute(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Reply, error)
}

type recommenderClient struct {
	cc *grpc.ClientConn
}

func NewRecommenderClient(cc *grpc.ClientConn) RecommenderClient {
	return &recommenderClient{cc}
}

func (c *recommenderClient) Impute(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Reply, error) {
	out := new(Reply)
	err := c.cc.Invoke(ctx, "/recommender.Recommender/Impute", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RecommenderServer is the server API for Recommender service.
type RecommenderServer interface {
	Impute(context.Context, *Request) (*Reply, error)
}

// UnimplementedRecommenderServer can be embedded to have forward compatible implementations.
type UnimplementedRecommenderServer struct {
}

func (*UnimplementedRecommenderServer) Impute(ctx context.Context, req *Request) (*Reply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Impute not implemented")
}

func RegisterRecommenderServer(s *grpc.Server, srv RecommenderServer) {
	s.RegisterService(&_Recommender_serviceDesc, srv)
}

func _Recommender_Impute_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RecommenderServer).Impute(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/recommender.Recommender/Impute",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RecommenderServer).Impute(ctx, req.(*Request))
	}
	return interceptor(ctx, in, info, handler)
}

var _Recommender_serviceDesc = grpc.ServiceDesc{
	ServiceName: "recommender.Recommender",
	HandlerType: (*RecommenderServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Impute",
			Handler:    _Recommender_Impute_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "protos/recom.proto",
}
